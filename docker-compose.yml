services:
  nginx:
    build:
      context: ./services/nginx
    container_name: nginx
    ports:
      - "8080:80"
      - "8081:8081"
      - "8082:8082"
      - "443:443"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf
      - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf
      - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params
      - ${NGINX_LOG_DIR}:/var/log/nginx
    restart: always
    networks:
      - default

  php82:
    build:
      context: ./services/php82
      args:
        DEBIAN_MIRROR_DOMAIN: deb.debian.org
        PHP_EXTENSIONS: "$PHP82_EXTENSIONS"
        TZ: "$TZ"
    container_name: php82
    #entrypoint: ["/bin/bash", "/www/dwapi/dwapi/run.sh"]
    ports:
      - "7506:7506"
      - "7507:7507"
    expose:
      - 9501
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP82_PHP_CONF_FILE}:/usr/local/etc/php/php.ini
      - ${PHP82_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf
      - ${PHP82_LOG_DIR}:/var/log/php
      - ${PHP82_DATA_COMPOSER}:/tmp/composer
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql:/var/lib/mysql/:rw
      - ${MYSQL_LOG_DIR}:/var/log/mysql/:rw

    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_ROOT_HOST: "${MYSQL_ROOT_HOST}"
      TZ: "$TZ"

  redis:
     image: redis:${REDIS_VERSION}
     container_name: redis
     ports:
       - "${REDIS_HOST_PORT}:6379"
     volumes:
       - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
       - ${DATA_DIR}/redis:/data/:r
     restart: always
     entrypoint: ["redis-server", "/etc/redis.conf"]
     environment:
       TZ: "$TZ"
     networks:
       - default

  supervisor:
    build:
      context: ./services/supervisor
      args:
        ALPINE_VERSION: alpine:${ALPINE_VERSION}
        TZ: "$TZ"
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
    container_name: supervisor
    ports:
      - "${SUPERVISOR_HOST_PORT_C}:9001"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${SUPERVISOR_LOG}:/var/log/supervisor/:rw
      - ${SUPERVISOR_CONFIG}:/etc/supervisor/conf.d/:rw
      - ${SUPERVISOR_CONF_FILE}:/etc/supervisor/supervisord.conf:ro
    command:
      - /bin/sh
      - -c
      - |
       supervisord -n -c /etc/supervisor/supervisord.conf
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      # 解除下面的注释可以设置网段，用于nginx等容器固定容器IP
      config:
        - subnet: 10.0.0.0/24
